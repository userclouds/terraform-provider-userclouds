openapi: 3.0.3
info:
  description: Tokenizer OpenAPI Spec
  title: Tokenizer
  version: 1.0.0
paths:
  /tokenizer/policies/access:
    get:
      description: This endpoint returns a list of access policies in a tenant. The
        list can be filtered to only include policies with a specified name or version.
      parameters:
      - description: A cursor value after which the returned list will start
        in: query
        name: starting_after
        schema:
          description: A cursor value after which the returned list will start
          nullable: true
          type: string
      - description: A cursor value before which the returned list will end
        in: query
        name: ending_before
        schema:
          description: A cursor value before which the returned list will end
          nullable: true
          type: string
      - description: The maximum number of results to be returned per page
        in: query
        name: limit
        schema:
          description: The maximum number of results to be returned per page
          nullable: true
          type: string
      - description: A filter clause to use in the pagination query
        in: query
        name: filter
        schema:
          description: A filter clause to use in the pagination query
          nullable: true
          type: string
      - description: A comma-delimited list of field names to sort the returned results
          by - the last field name must be 'id'
        in: query
        name: sort_key
        schema:
          description: A comma-delimited list of field names to sort the returned
            results by - the last field name must be 'id'
          nullable: true
          type: string
      - description: The order in which results should be sorted (ascending or descending)
        in: query
        name: sort_order
        schema:
          description: The order in which results should be sorted (ascending or descending)
          nullable: true
          type: string
      - description: The version of the API to be called
        in: query
        name: version
        schema:
          description: The version of the API to be called
          nullable: true
          type: string
      - description: Optional - allows filtering by access policy name
        in: query
        name: policy_name
        schema:
          description: Optional - allows filtering by access policy name
          nullable: true
          type: string
      - description: Optional - allows filtering by access policy version
        in: query
        name: policy_version
        schema:
          description: Optional - allows filtering by access policy version
          nullable: true
          type: string
      - description: Optional - set versioned to be true to include all prior versions
          of access policies in response
        in: query
        name: versioned
        schema:
          description: Optional - set versioned to be true to include all prior versions
            of access policies in response
          nullable: true
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpListAccessPoliciesResponse'
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: List Access Policies
      tags:
      - Access Policies
    post:
      description: This endpoint creates an access policy.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenizerCreateAccessPolicyRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAccessPolicy'
          description: Created
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: Create Access Policy
      tags:
      - Access Policies
  /tokenizer/policies/access/{id}:
    delete:
      description: This endpoint deletes an access policy by ID.
      parameters:
      - description: Required - specifies the version of the policy to delete, use
          'all' to delete all versions
        in: query
        name: policy_version
        schema:
          description: Required - specifies the version of the policy to delete, use
            'all' to delete all versions
          nullable: true
          type: string
      - in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UuidUUID'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: Delete Access Policy
      tags:
      - Access Policies
    get:
      description: This endpoint gets an access policy.
      parameters:
      - description: Optional - if not specified, the latest policy will be returned
        in: query
        name: policy_version
        schema:
          description: Optional - if not specified, the latest policy will be returned
          nullable: true
          type: string
      - in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UuidUUID'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAccessPolicy'
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get Access Policy
      tags:
      - Access Policies
    put:
      description: This endpoint updates a specified access policy.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UuidUUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenizerUpdateAccessPolicyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAccessPolicy'
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: Update Access Policy
      tags:
      - Access Policies
  /tokenizer/policies/accesstemplate:
    get:
      description: This endpoint returns a paginated list of access policy templates
        in a tenant. The list can be filtered to only include templates with a specified
        name or version.
      parameters:
      - description: A cursor value after which the returned list will start
        in: query
        name: starting_after
        schema:
          description: A cursor value after which the returned list will start
          nullable: true
          type: string
      - description: A cursor value before which the returned list will end
        in: query
        name: ending_before
        schema:
          description: A cursor value before which the returned list will end
          nullable: true
          type: string
      - description: The maximum number of results to be returned per page
        in: query
        name: limit
        schema:
          description: The maximum number of results to be returned per page
          nullable: true
          type: string
      - description: A filter clause to use in the pagination query
        in: query
        name: filter
        schema:
          description: A filter clause to use in the pagination query
          nullable: true
          type: string
      - description: A comma-delimited list of field names to sort the returned results
          by - the last field name must be 'id'
        in: query
        name: sort_key
        schema:
          description: A comma-delimited list of field names to sort the returned
            results by - the last field name must be 'id'
          nullable: true
          type: string
      - description: The order in which results should be sorted (ascending or descending)
        in: query
        name: sort_order
        schema:
          description: The order in which results should be sorted (ascending or descending)
          nullable: true
          type: string
      - description: The version of the API to be called
        in: query
        name: version
        schema:
          description: The version of the API to be called
          nullable: true
          type: string
      - description: Optional - allows filtering by template name
        in: query
        name: template_name
        schema:
          description: Optional - allows filtering by template name
          nullable: true
          type: string
      - description: Optional - allows filtering by template version
        in: query
        name: template_version
        schema:
          description: Optional - allows filtering by template version
          nullable: true
          type: string
      - description: Optional - if versioned is true, endpoint will return all versions
          of each access policy template in the response. Otherwise, only the latest
          version of each template will be returned.
        in: query
        name: versioned
        schema:
          description: Optional - if versioned is true, endpoint will return all versions
            of each access policy template in the response. Otherwise, only the latest
            version of each template will be returned.
          nullable: true
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpListAccessPolicyTemplatesResponse'
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: List Access Policy Templates
      tags:
      - Access Policy Templates
    post:
      description: This endpoint creates an access policy template.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenizerCreateAccessPolicyTemplateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAccessPolicyTemplate'
          description: Created
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: Create Access Policy Template
      tags:
      - Access Policy Templates
  /tokenizer/policies/accesstemplate/{id}:
    delete:
      description: This endpoint deletes an access policy template by ID.
      parameters:
      - description: Required - specifies the version of the template to delete, use
          'all' to delete all versions
        in: query
        name: template_version
        schema:
          description: Required - specifies the version of the template to delete,
            use 'all' to delete all versions
          nullable: true
          type: string
      - in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UuidUUID'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: Delete Access Policy Template
      tags:
      - Access Policy Templates
    get:
      description: This endpoint gets an access policy template by ID.
      parameters:
      - description: Optional - if not specified, the latest template will be returned
        in: query
        name: template_version
        schema:
          description: Optional - if not specified, the latest template will be returned
          nullable: true
          type: string
      - in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UuidUUID'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAccessPolicyTemplate'
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get Access Policy Template
      tags:
      - Access Policy Templates
    put:
      description: This endpoint updates a specified access policy template.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UuidUUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenizerUpdateAccessPolicyTemplateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyAccessPolicyTemplate'
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: Update Access Policy Template
      tags:
      - Access Policy Templates
  /tokenizer/policies/secret:
    get:
      description: This endpoint lists all secrets.
      parameters:
      - description: A cursor value after which the returned list will start
        in: query
        name: starting_after
        schema:
          description: A cursor value after which the returned list will start
          nullable: true
          type: string
      - description: A cursor value before which the returned list will end
        in: query
        name: ending_before
        schema:
          description: A cursor value before which the returned list will end
          nullable: true
          type: string
      - description: The maximum number of results to be returned per page
        in: query
        name: limit
        schema:
          description: The maximum number of results to be returned per page
          nullable: true
          type: string
      - description: A filter clause to use in the pagination query
        in: query
        name: filter
        schema:
          description: A filter clause to use in the pagination query
          nullable: true
          type: string
      - description: A comma-delimited list of field names to sort the returned results
          by - the last field name must be 'id'
        in: query
        name: sort_key
        schema:
          description: A comma-delimited list of field names to sort the returned
            results by - the last field name must be 'id'
          nullable: true
          type: string
      - description: The order in which results should be sorted (ascending or descending)
        in: query
        name: sort_order
        schema:
          description: The order in which results should be sorted (ascending or descending)
          nullable: true
          type: string
      - description: The version of the API to be called
        in: query
        name: version
        schema:
          description: The version of the API to be called
          nullable: true
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpListSecretsResponse'
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: List Secrets
      tags:
      - Secrets
    post:
      description: This endpoint creates a new secret.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenizerCreateSecretRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicySecret'
          description: Created
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: Create Secret
      tags:
      - Secrets
  /tokenizer/policies/secret/{id}:
    delete:
      description: This endpoint deletes a secret.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UuidUUID'
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
      summary: Delete Secret
      tags:
      - Secrets
  /tokenizer/policies/transformation:
    get:
      description: This endpoint returns a paginated list of all transformers in a
        tenant. The list can be filtered to only include transformers with a specific
        name.
      parameters:
      - description: A cursor value after which the returned list will start
        in: query
        name: starting_after
        schema:
          description: A cursor value after which the returned list will start
          nullable: true
          type: string
      - description: A cursor value before which the returned list will end
        in: query
        name: ending_before
        schema:
          description: A cursor value before which the returned list will end
          nullable: true
          type: string
      - description: The maximum number of results to be returned per page
        in: query
        name: limit
        schema:
          description: The maximum number of results to be returned per page
          nullable: true
          type: string
      - description: A filter clause to use in the pagination query
        in: query
        name: filter
        schema:
          description: A filter clause to use in the pagination query
          nullable: true
          type: string
      - description: A comma-delimited list of field names to sort the returned results
          by - the last field name must be 'id'
        in: query
        name: sort_key
        schema:
          description: A comma-delimited list of field names to sort the returned
            results by - the last field name must be 'id'
          nullable: true
          type: string
      - description: The order in which results should be sorted (ascending or descending)
        in: query
        name: sort_order
        schema:
          description: The order in which results should be sorted (ascending or descending)
          nullable: true
          type: string
      - description: The version of the API to be called
        in: query
        name: version
        schema:
          description: The version of the API to be called
          nullable: true
          type: string
      - description: Optional - allows filtering by transformer name
        in: query
        name: transformer_name
        schema:
          description: Optional - allows filtering by transformer name
          nullable: true
          type: string
      - description: Optional - allows filtering by transformer version
        in: query
        name: transformer_version
        schema:
          description: Optional - allows filtering by transformer version
          nullable: true
          type: string
      - description: Optional - set versioned to be true to include all prior versions
          of transformers in response
        in: query
        name: versioned
        schema:
          description: Optional - set versioned to be true to include all prior versions
            of transformers in response
          nullable: true
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdpListTransformersResponse'
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: List Transformers
      tags:
      - Transformers
    post:
      description: This endpoint creates a new transformer.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenizerCreateTransformerRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyTransformer'
          description: Created
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: Create Transformer
      tags:
      - Transformers
  /tokenizer/policies/transformation/{id}:
    delete:
      description: This endpoint deletes a transformer by ID.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UuidUUID'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: Delete Transformer
      tags:
      - Transformers
    get:
      description: This endpoint gets a transformer by ID.
      parameters:
      - description: Optional - if not specified, the latest policy will be returned
        in: query
        name: transformer_version
        schema:
          description: Optional - if not specified, the latest policy will be returned
          nullable: true
          type: string
      - in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UuidUUID'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyTransformer'
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Get Transformer
      tags:
      - Transformers
    put:
      description: This endpoint updates a transformer.
      parameters:
      - in: path
        name: id
        required: true
        schema:
          $ref: '#/components/schemas/UuidUUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenizerUpdateTransformerRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyTransformer'
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: Update Transformer
      tags:
      - Transformers
  /tokenizer/tokens:
    delete:
      description: This endpoint deletes a token by ID.
      parameters:
      - description: ID of token to be deleted
        in: query
        name: token
        schema:
          description: ID of token to be deleted
          nullable: true
          type: string
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Delete Token
      tags:
      - Tokens
    post:
      description: This endpoint creates a token for a piece of data. CreateToken
        will always generate a unique token. If you want to reuse a token that was
        already generated, use LookupToken.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenizerCreateTokenRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenizerCreateTokenResponse'
          description: Created
        "400":
          description: Bad Request
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: Create Token
      tags:
      - Tokens
  /tokenizer/tokens/actions/inspect:
    post:
      description: This endpoint gets a token. It is a primarily a debugging API that
        allows you to query a token without resolving it.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenizerInspectTokenRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenizerInspectTokenResponse'
          description: OK
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Inspect Token
      tags:
      - Tokens
  /tokenizer/tokens/actions/lookup:
    post:
      description: This endpoint helps you re-use existing tokens. It receives a piece
        of data and an access policy. It returns existing tokens that match across
        the full set of parameters. If no token matches, an error is returned.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenizerLookupTokensRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenizerLookupTokensResponse'
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Lookup Token
      tags:
      - Tokens
  /tokenizer/tokens/actions/lookuporcreate:
    post:
      description: This endpoint helps you re-use existing tokens by only creating
        new tokens when they don't exist already.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenizerLookupOrCreateTokensRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenizerLookupOrCreateTokensResponse'
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "409":
          description: Conflict
        "500":
          description: Internal Server Error
      summary: Lookup Or Create Tokens
      tags:
      - Tokens
  /tokenizer/tokens/actions/resolve:
    post:
      description: This endpoint receives a list of tokens, applies the associated
        access policy for each token, and returns the associated token data if the
        conditions of the access policy are met.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenizerResolveTokensRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TokenizerResolveTokenResponse'
                type: array
          description: OK
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      summary: Resolve Token
      tags:
      - Tokens
components:
  schemas:
    IdpListAccessPoliciesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/PolicyAccessPolicy'
          nullable: true
          type: array
        has_next:
          type: boolean
        has_prev:
          type: boolean
        next:
          type: string
        prev:
          $ref: '#/components/schemas/PaginationCursor'
      type: object
    IdpListAccessPolicyTemplatesResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/PolicyAccessPolicyTemplate'
          nullable: true
          type: array
        has_next:
          type: boolean
        has_prev:
          type: boolean
        next:
          type: string
        prev:
          $ref: '#/components/schemas/PaginationCursor'
      type: object
    IdpListSecretsResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/PolicySecret'
          nullable: true
          type: array
        has_next:
          type: boolean
        has_prev:
          type: boolean
        next:
          type: string
        prev:
          $ref: '#/components/schemas/PaginationCursor'
      type: object
    IdpListTransformersResponse:
      properties:
        data:
          items:
            $ref: '#/components/schemas/PolicyTransformer'
          nullable: true
          type: array
        has_next:
          type: boolean
        has_prev:
          type: boolean
        next:
          type: string
        prev:
          $ref: '#/components/schemas/PaginationCursor'
      type: object
    PaginationCursor: {}
    PolicyAccessPolicy:
      properties:
        components:
          items:
            $ref: '#/components/schemas/PolicyAccessPolicyComponent'
          nullable: true
          type: array
        description:
          type: string
        id:
          $ref: '#/components/schemas/UuidUUID'
        is_autogenerated:
          description: Whether this policy is autogenerated from an accessor or mutator.
          type: boolean
        is_system:
          description: Whether this policy is a system policy. System policies cannot
            be deleted or modified. This property cannot be changed.
          type: boolean
        name:
          type: string
        policy_type:
          $ref: '#/components/schemas/PolicyPolicyType'
        required_context:
          additionalProperties:
            type: string
          description: What context is required for this policy to be executed
          nullable: true
          type: object
        tag_ids:
          $ref: '#/components/schemas/UuidarrayUUIDArray'
        thresholds:
          $ref: '#/components/schemas/PolicyAccessPolicyThresholds'
        version:
          type: integer
      required:
      - name
      - policy_type
      type: object
    PolicyAccessPolicyComponent:
      properties:
        policy:
          $ref: '#/components/schemas/UserstoreResourceID'
        template:
          $ref: '#/components/schemas/UserstoreResourceID'
        template_parameters:
          type: string
      type: object
    PolicyAccessPolicyTemplate:
      properties:
        created:
          format: date-time
          type: string
        deleted:
          format: date-time
          type: string
        description:
          type: string
        function:
          type: string
        id:
          $ref: '#/components/schemas/UuidUUID'
        is_system:
          description: Whether this resource is a system resource. System resources
            cannot be deleted or modified. This property cannot be changed.
          type: boolean
        name:
          type: string
        updated:
          format: date-time
          type: string
        version:
          type: integer
      required:
      - name
      - function
      type: object
    PolicyAccessPolicyThresholds:
      properties:
        announce_max_execution_failure:
          description: If true, we return '429 Too Many Requests' if max_executions
            is exceeded for the past max_execution_duration_seconds seconds.
          type: boolean
        announce_max_result_failure:
          description: If true, we return '400 Bad Request' if the action would involve
            more than max_results_per_execution results.
          type: boolean
        max_execution_duration_seconds:
          description: Specifies the duration in seconds over which we limit the max
            executions. If max_executions is non-zero, this value must be between
            5 and 60, inclusive.
          type: integer
        max_executions:
          description: If non-zero, specifies the maximum number of executions for
            the past max_execution_duration_seconds seconds.
          type: integer
        max_results_per_execution:
          description: If non-zero, specifies the max number of results that an action
            can involve.
          type: integer
      type: object
    PolicyClientContext:
      additionalProperties: {}
      type: object
    PolicyPolicyType:
      enum:
      - composite_and
      - composite_or
      type: string
    PolicySecret:
      properties:
        created:
          type: integer
        id:
          $ref: '#/components/schemas/UuidUUID'
        name:
          type: string
        value:
          type: string
      required:
      - name
      - value
      type: object
    PolicyTransformType:
      enum:
      - passthrough
      - tokenizebyreference
      - tokenizebyvalue
      - transform
      type: string
    PolicyTransformer:
      properties:
        description:
          type: string
        function:
          type: string
        id:
          $ref: '#/components/schemas/UuidUUID'
        input_data_type:
          $ref: '#/components/schemas/UserstoreResourceID'
        input_type:
          type: string
        input_type_constraints:
          $ref: '#/components/schemas/UserstoreColumnConstraints'
        is_system:
          description: Whether this transformer is a system transformer. System transformers
            cannot be deleted or modified. This property cannot be changed.
          type: boolean
        name:
          type: string
        output_data_type:
          $ref: '#/components/schemas/UserstoreResourceID'
        output_type:
          type: string
        output_type_constraints:
          $ref: '#/components/schemas/UserstoreColumnConstraints'
        parameters:
          type: string
        reuse_existing_token:
          description: Specifies if the tokenizing transformer should return existing
            token instead of creating a new one.
          type: boolean
        tag_ids:
          $ref: '#/components/schemas/UuidarrayUUIDArray'
        transform_type:
          $ref: '#/components/schemas/PolicyTransformType'
        version:
          type: integer
      required:
      - name
      - input_data_type
      - output_data_type
      - transform_type
      - function
      type: object
    TokenizerCreateAccessPolicyRequest:
      properties:
        access_policy:
          $ref: '#/components/schemas/PolicyAccessPolicy'
      type: object
    TokenizerCreateAccessPolicyTemplateRequest:
      properties:
        access_policy_template:
          $ref: '#/components/schemas/PolicyAccessPolicyTemplate'
      type: object
    TokenizerCreateSecretRequest:
      properties:
        secret:
          $ref: '#/components/schemas/PolicySecret'
      type: object
    TokenizerCreateTokenRequest:
      properties:
        access_policy_rid:
          $ref: '#/components/schemas/UserstoreResourceID'
        data:
          type: string
        transformer_rid:
          $ref: '#/components/schemas/UserstoreResourceID'
      type: object
    TokenizerCreateTokenResponse:
      properties:
        data:
          type: string
      type: object
    TokenizerCreateTransformerRequest:
      properties:
        transformer:
          $ref: '#/components/schemas/PolicyTransformer'
      type: object
    TokenizerInspectTokenRequest:
      properties:
        token:
          type: string
      type: object
    TokenizerInspectTokenResponse:
      properties:
        access_policy:
          $ref: '#/components/schemas/PolicyAccessPolicy'
        created:
          format: date-time
          type: string
        id:
          $ref: '#/components/schemas/UuidUUID'
        token:
          type: string
        transformer:
          $ref: '#/components/schemas/PolicyTransformer'
        updated:
          format: date-time
          type: string
      type: object
    TokenizerLookupOrCreateTokensRequest:
      properties:
        access_policy_rids:
          items:
            $ref: '#/components/schemas/UserstoreResourceID'
          nullable: true
          type: array
        data:
          items:
            type: string
          nullable: true
          type: array
        transformer_rids:
          items:
            $ref: '#/components/schemas/UserstoreResourceID'
          nullable: true
          type: array
      type: object
    TokenizerLookupOrCreateTokensResponse:
      properties:
        tokens:
          items:
            type: string
          nullable: true
          type: array
      type: object
    TokenizerLookupTokensRequest:
      properties:
        access_policy_rid:
          $ref: '#/components/schemas/UserstoreResourceID'
        data:
          type: string
        transformer_rid:
          $ref: '#/components/schemas/UserstoreResourceID'
      type: object
    TokenizerLookupTokensResponse:
      properties:
        tokens:
          items:
            type: string
          nullable: true
          type: array
      type: object
    TokenizerResolveTokenResponse:
      properties:
        data:
          type: string
        token:
          type: string
      type: object
    TokenizerResolveTokensRequest:
      properties:
        context:
          $ref: '#/components/schemas/PolicyClientContext'
        purposes:
          items:
            $ref: '#/components/schemas/UserstoreResourceID'
          nullable: true
          type: array
        tokens:
          items:
            type: string
          nullable: true
          type: array
      type: object
    TokenizerUpdateAccessPolicyRequest:
      properties:
        access_policy:
          $ref: '#/components/schemas/PolicyAccessPolicy'
      type: object
    TokenizerUpdateAccessPolicyTemplateRequest:
      properties:
        access_policy_template:
          $ref: '#/components/schemas/PolicyAccessPolicyTemplate'
      type: object
    TokenizerUpdateTransformerRequest:
      properties:
        transformer:
          $ref: '#/components/schemas/PolicyTransformer'
      type: object
    UserstoreColumnConstraints:
      properties:
        fields:
          description: The set of fields associated with a column of type composite.
            Fields cannot be specified if the column type is not composite.
          items:
            $ref: '#/components/schemas/UserstoreColumnField'
          nullable: true
          type: array
        immutable_required:
          description: Can be enabled when unique_id_required is enabled. If true,
            values for the associated column cannot be modified, but can be added
            or removed.
          type: boolean
        partial_updates:
          description: Can be enabled for array columns that have UniqueRequired or
            UniqueIDRequired enabled. When enabled, a mutation request will update
            the specified subset of values for the associated column.
          type: boolean
        unique_id_required:
          description: Can be enabled for column type composite or address. If true,
            each value for the associated column must have a unique string ID, which
            can either be provided or generated by backend.
          type: boolean
        unique_required:
          description: If true, each value for the associated column must be unique
            for the user. This is primarily useful for array columns.
          type: boolean
      type: object
    UserstoreColumnField:
      properties:
        camel_case_name:
          description: Read-only camel-case version of field name, with underscores
            stripped out. (ex. IDField1)
          type: string
        ignore_for_uniqueness:
          description: If true, field value will be ignored when comparing two composite
            value for a uniqueness check.
          type: boolean
        name:
          description: Each part of name must be capitalized or all-caps, separated
            by underscores. Names may contain alphanumeric characters, and the first
            part must start with a letter, while other parts may start with a number.
            (ex. ID_Field_1)
          type: string
        required:
          description: Whether a value must be specified for the field.
          type: boolean
        struct_name:
          description: Read-only snake-case version of field name, with all letters
            lowercase. (ex. id_field_1)
          type: string
        type:
          type: string
      required:
      - type
      - name
      type: object
    UserstoreResourceID:
      properties:
        id:
          $ref: '#/components/schemas/UuidUUID'
        name:
          type: string
      type: object
    UuidUUID:
      example: 248df4b7-aa70-47b8-a036-33ac447e668d
      format: uuid
      type: string
    UuidarrayUUIDArray:
      items:
        $ref: '#/components/schemas/UuidUUID'
      nullable: true
      type: array
servers:
- url: https://your-tenant-name.tenant.userclouds.com
x-readme:
  explorer-enabled: false
